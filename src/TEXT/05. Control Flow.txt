### 코틀린의 제어문 (control flow)



### if 문
예시1)
    fun main() {
        val number = 15
        if (number % 2 == 0) {
            println("$number is even")
        } else {
            println("$number is odd")
        }
    }

예시2)
    fun main() {
        val age = 25
        if (age >= 18) {
            if (age < 65) {
                println("Adult")
            } else {
                println("Senior")
            }
        } else {
            println("Minor")
        }
    }



### when 문
    fun main() {
        val day = 3
        when (day) {
            1 -> println("Monday")
            2 -> println("Tuesday")
            3 -> println("Wednesday")
            4 -> println("Thursday")
            5 -> println("Friday")
            6 -> println("Saturday")
            7 -> println("Sunday")
            else -> println("Invalid day")
        }
    }



### for 문
예시1)
    fun main() {
        for (i in 1..5) {
            print("$i ")  // 1 2 3 4 5
        }
        println()
    }

예시2)
    fun main() {
        val fruits = listOf("apple", "banana", "cherry")
        for (fruit in fruits) {
            println(fruit)
        }
    }



### while 문
예시1)
    fun main() {
        var count = 1
        while (count <= 5) {
            print("$count ")  // 1 2 3 4 5
            count++
        }
        println()
    }

예시2)
    fun main() {
        var num = 10
        while (true) {
            println(num)
            num--
            if (num < 1) break  // num이 1보다 작으면 루프 종료
        }
    }



### do ... while 문
    fun main() {
        var count = 10
        do {
            println("Count is $count")  // Count is 10, 9, 8, ..., 1
            count--
        } while (count > 0)
    }



### return 문 (예시 생략)



### try-catch 문
    fun main() {
        try {
            val result = 10 / 2
            println("Result is $result")
        } catch (e: ArithmeticException) {
            println("Cannot divide by zero: ${e.message}")
        } finally {
            println("This block is executed regardless of an exception")
        }
    }



### forEach 루프문 forEach { 람다식 }
예시1)
    fun main() {
        val numbers = listOf(1, 2, 3, 4, 5)
        numbers.forEach { number ->
            print("$number ")  // 1 2 3 4 5
        }
        println()
    }

예시2)
    fun main() {
        val map = mapOf("a" to 1, "b" to 2, "c" to 3)
        map.forEach { (key, value) ->
            println("Key: $key, Value: $value")
        }
    }



### break 와 continue
예시1)
    fun main() {
        for (i in 1..10) {
            if (i == 5) break  // i가 5가 되면 루프 종료
            print("$i ")  // 1 2 3 4
        }
    }

예시2)
    fun main() {
        for (i in 1..10) {
            if (i % 2 == 0) continue  // 짝수일 경우 다음 반복으로 넘어감
            print("$i ")  // 1 3 5 7 9
        }
    }
